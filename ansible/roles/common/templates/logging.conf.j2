# Machine-generated by ansible - do not edit!

[loggers]
keys = root, yagi, winchester

[handlers]
keys = stderr, stdout, null

[formatters]
keys = yagi, default

[logger_root]
level = {{ root_log_level }}
handlers = null

[logger_yagi]
level = {{ yagi_log_level }}
handlers = stderr
qualname = yagi

[logger_winchester]
level = {{ winchester_log_level }}
handlers = stderr
qualname = winchester

[logger_amqplib]
level = {{ amqp_log_level }}
handlers = stderr
qualname = amqplib

[logger_sqlalchemy]
# yagi does not use sqlalchemy... yet. -mdragon
level = {{ sqlalchemy_log_level }}
handlers = stderr
qualname = sqlalchemy

[handler_stderr]
class = StreamHandler
args = (sys.stderr,)
formatter = yagi

[handler_stdout]
class = StreamHandler
args = (sys.stdout,)
formatter = yagi

[handler_watchedfile]
class = handlers.WatchedFileHandler
args = ()
formatter = yagi

[handler_syslog]
class = handlers.SysLogHandler
args = ('/var/log/stv3', handlers.SysLogHandler.LOG_USER)
formatter = yagi

[handler_null]
class = NullHandler
formatter = default
args = ()

[formatter_yagi]
# substitutions available for formats are documented at:
# https://docs.python.org/2/library/logging.html#logrecord-attributes
format = %(name)s[%(levelname)s at %(asctime)s line: %(lineno)d] %(message)s

[formatter_default]
format = %(message)s
